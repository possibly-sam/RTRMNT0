1756793656
3d99647a2a2fc2912c8002152881da16-phpdoc%3A7891c9204fd7da7cabcfa4c8a8a15341-ff342640afc06efed38cb40fec71f882
s:31472:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:39:" phpDocumentor\Reflection\Php\File name";s:13:"calculate.php";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:2:{s:15:"\amortization()";O:38:"phpDocumentor\Reflection\Php\Function_":9:{s:49:" phpDocumentor\Reflection\Php\Function_ arguments";a:3:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:9:"principal";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:1;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:13:"interest_rate";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:2;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:15:"number_of_years";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:48:" phpDocumentor\Reflection\Php\Function_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:37;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:51:" phpDocumentor\Reflection\Php\Function_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:46;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\Php\Function_ returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Function_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:15:"\amortization()";s:36:" phpDocumentor\Reflection\Fqsen name";s:12:"amortization";}s:48:" phpDocumentor\Reflection\Php\Function_ docBlock";N;s:60:" phpDocumentor\Reflection\Php\Function_ hasReturnByReference";b:0;s:48:" phpDocumentor\Reflection\Php\Function_ metadata";a:0:{}s:50:" phpDocumentor\Reflection\Php\Function_ attributes";a:0:{}}s:20:"\calculation_logic()";O:38:"phpDocumentor\Reflection\Php\Function_":9:{s:49:" phpDocumentor\Reflection\Php\Function_ arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:15:"the_bucket_info";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:48:" phpDocumentor\Reflection\Php\Function_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:77;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:51:" phpDocumentor\Reflection\Php\Function_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:190;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\Php\Function_ returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Function_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:20:"\calculation_logic()";s:36:" phpDocumentor\Reflection\Fqsen name";s:17:"calculation_logic";}s:48:" phpDocumentor\Reflection\Php\Function_ docBlock";N;s:60:" phpDocumentor\Reflection\Php\Function_ hasReturnByReference";b:0;s:48:" phpDocumentor\Reflection\Php\Function_ metadata";a:0:{}s:50:" phpDocumentor\Reflection\Php\Function_ attributes";a:0:{}}}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"ff342640afc06efed38cb40fec71f882";s:39:" phpDocumentor\Reflection\Php\File path";s:13:"calculate.php";s:41:" phpDocumentor\Reflection\Php\File source";s:18746:"<?php
/*
 * Retirement Calculator for Couples - Calculation Engine
 * 
 * Key Features Implemented:
 * 
 * 1. Enhanced calculation_logic Function:
 *    - Processes each retirement bucket through comprehensive calculations
 *    - Uses the existing amortization function to calculate monthly payments
 *    - Handles different ownership scenarios (person1, person2, joint)
 * 
 * 2. Comprehensive Bucket Calculations:
 *    - Growth Projections: Calculates account values at key ages (access age, full benefit age, 70, 75, 80)
 *    - Contribution Handling: Includes ongoing monthly contributions until contribution end age
 *    - Compound Growth: Applies real interest rates over time
 *    - Penalty Application: Reduces payments for early access based on penalty rates
 * 
 * 3. Amortization Integration:
 *    - Uses amortization($principal, $interest_rate, $number_of_years) function
 *    - Calculates monthly payments assuming 20-year withdrawal period
 *    - Converts annual rates to monthly for accurate calculations
 * 
 * 4. Rich Output Display:
 *    - Projection Tables: Shows account values and payments at different ages
 *    - Penalty Highlighting: Red-highlighted rows show reduced payments due to early access
 *    - Summary Section: Total monthly income and expense coverage percentages
 *    - Breakeven Analysis: Compares early access vs full benefit scenarios
 * 
 * 5. Key Calculations Per Bucket:
 *    - Account value at target age (with contributions and growth)
 *    - Monthly payment using amortization formula
 *    - Annual payment equivalent
 *    - Penalty adjustments for early access
 *    - Years from current age to target age
 */

function amortization($principal, $interest_rate, $number_of_years)
{
	
  if (	$number_of_years < 1.0) return $principal;
  if ($interest_rate === 0) return $principal / $number_of_years;

  $result = (1 + $interest_rate) ** (-$number_of_years);
  $result = $principal * $interest_rate / ( 1 - $result);
  return $result;
}





/*
 * 
 * name: calculation_logic
 * @param $the_bucket_info
 * @return  NULL
 * 
 *  Created calculation_logic($the_bucket_info) function:
 *  Takes the complete retirement data as a structured JSON object
 *  Returns placeholder for calculation results
 *  Ready for implementing retirement algorithms
 * 
 *  /Enhanced Data Processing:/
 *   All form data is sanitized and structured
 *  Default values applied where needed
 *  Bucket data properly normalized with all fields
 * 
 * /Improved Output Display:/
 * 
 *  Uses external CSS styling
 *  Shows structured input summary
 *  Displays the complete JSON object for debugging
 *  Ready for calculation results integration* 
 */


function calculation_logic($the_bucket_info) {
    // Extract data from JSON object
    $couple = $the_bucket_info['couple'];
    $financial = $the_bucket_info['financial'];
    $buckets = $the_bucket_info['buckets'];
    
    // Initialize results structure
    $results = [
        'bucket_calculations' => [],
        'scenarios' => [],
        'breakeven_analysis' => [],
        'recommendations' => []
    ];
    
    // Process each bucket through amortization calculations
    foreach ($buckets as $bucket) {
        $bucket_result = [
            'bucket_info' => $bucket,
            'calculations' => []
        ];
        
        // Get the owner's current age for calculations
        $owner_age = 0;
        if ($bucket['owner'] === 'person1') {
            $owner_age = $couple['person1']['age'];
        } elseif ($bucket['owner'] === 'person2') {
            $owner_age = $couple['person2']['age'];
        } else {
            // For joint accounts, use the younger person's age
            $owner_age = min($couple['person1']['age'], $couple['person2']['age']);
        }
        
        // Calculate current value with ongoing contributions until contribution end age
        $current_value = $bucket['current_value'];
        $real_rate = $bucket['real_rate'] / 100; // Convert percentage to decimal
        
        // Calculate value at different key ages
        $key_ages = [
            'access_age' => $bucket['access_age'],
            'full_benefit_age' => $bucket['full_benefit_age'],
            'age_70' => 70,
            'age_75' => 75,
            'age_80' => 80
        ];
        
        foreach ($key_ages as $age_label => $target_age) {
            if ($target_age <= $owner_age) {
                // Already past this age
                continue;
            }
            
            $years_to_target = $target_age - $owner_age;
            $value_at_target = $current_value;
            
            // Add contributions during the growth period
            if ($bucket['monthly_contribution'] > 0 && $owner_age < $bucket['contribution_end_age']) {
                $contribution_years = min($years_to_target, $bucket['contribution_end_age'] - $owner_age);
                $annual_contribution = $bucket['monthly_contribution'] * 12;
                
                // Calculate future value of contributions (annuity)
                if ($real_rate > 0) {
                    $contribution_fv = $annual_contribution * (((1 + $real_rate) ** $contribution_years - 1) / $real_rate);
                } else {
                    $contribution_fv = $annual_contribution * $contribution_years;
                }
                
                $value_at_target += $contribution_fv;
            }
            
            // Apply compound growth to current value
            $value_at_target = $current_value * ((1 + $real_rate) ** $years_to_target);
            
            // Add contribution growth
            if ($bucket['monthly_contribution'] > 0 && $owner_age < $bucket['contribution_end_age']) {
                $contribution_years = min($years_to_target, $bucket['contribution_end_age'] - $owner_age);
                $annual_contribution = $bucket['monthly_contribution'] * 12;
                
                if ($real_rate > 0) {
                    $contribution_fv = $annual_contribution * (((1 + $real_rate) ** $contribution_years - 1) / $real_rate);
                    $value_at_target += $contribution_fv;
                } else {
                    $value_at_target += $annual_contribution * $contribution_years;
                }
            }
            
            // Calculate monthly payment using amortization function
            // Assume 20-year withdrawal period for amortization calculation
            $withdrawal_years = 20;
            $monthly_payment = amortization($value_at_target, $real_rate / 12, $withdrawal_years * 12) / 12;
            
            // Apply early access penalty if applicable
            $penalty_applied = false;
            if ($target_age < $bucket['full_benefit_age'] && $bucket['early_penalty'] > 0) {
                $penalty_factor = (100 - $bucket['early_penalty']) / 100;
                $monthly_payment *= $penalty_factor;
                $penalty_applied = true;
            }
            
            $bucket_result['calculations'][$age_label] = [
                'age' => $target_age,
                'years_from_now' => $years_to_target,
                'account_value' => $value_at_target,
                'monthly_payment' => $monthly_payment,
                'annual_payment' => $monthly_payment * 12,
                'penalty_applied' => $penalty_applied,
                'penalty_rate' => $penalty_applied ? $bucket['early_penalty'] : 0
            ];
        }
        
        $results['bucket_calculations'][] = $bucket_result;
    }
    
    return $results;
}

// Form handler with JSON object creation
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Sanitize and validate input data
    $person1_name = htmlspecialchars($_POST['person1_name'] ?? '');
    $person1_age = (int)($_POST['person1_age'] ?? 0);
    $person2_name = htmlspecialchars($_POST['person2_name'] ?? '');
    $person2_age = (int)($_POST['person2_age'] ?? 0);
    
    $monthly_expenses = (float)($_POST['monthly_expenses'] ?? 0);
    $currency = htmlspecialchars($_POST['currency'] ?? 'USD');
    $default_real_rate = (float)($_POST['default_real_rate'] ?? 2.0);
    $inflation_assumption = (float)($_POST['inflation_assumption'] ?? 2.5);
    
    $buckets = $_POST['buckets'] ?? [];
    
    // Basic validation
    $errors = [];
    if (empty($person1_name)) $errors[] = "Person 1 name is required";
    if ($person1_age < 18 || $person1_age > 100) $errors[] = "Person 1 age must be between 18 and 100";
    if (empty($person2_name)) $errors[] = "Person 2 name is required";
    if ($person2_age < 18 || $person2_age > 100) $errors[] = "Person 2 age must be between 18 and 100";
    if ($monthly_expenses <= 0) $errors[] = "Monthly expenses must be greater than 0";
    
    if (!empty($errors)) {
        echo "<h2>Validation Errors:</h2>";
        echo "<ul>";
        foreach ($errors as $error) {
            echo "<li>" . htmlspecialchars($error) . "</li>";
        }
        echo "</ul>";
        echo "<a href='index.php'>Go Back</a>";
        exit;
    }
    
    // Create comprehensive JSON object with all retirement data
    $retirement_data = [
        'couple' => [
            'person1' => [
                'name' => $person1_name,
                'age' => $person1_age
            ],
            'person2' => [
                'name' => $person2_name,
                'age' => $person2_age
            ]
        ],
        'financial' => [
            'monthly_expenses' => $monthly_expenses,
            'currency' => $currency,
            'default_real_rate' => $default_real_rate,
            'inflation_assumption' => $inflation_assumption
        ],
        'buckets' => []
    ];
    
    // Process and structure bucket data
    foreach ($buckets as $id => $bucket) {
        if (!empty($bucket['name'])) {
            $retirement_data['buckets'][] = [
                'id' => $id,
                'name' => htmlspecialchars($bucket['name']),
                'type' => htmlspecialchars($bucket['type'] ?? 'private'),
                'location' => htmlspecialchars($bucket['location'] ?? ''),
                'owner' => htmlspecialchars($bucket['owner'] ?? 'person1'),
                'current_value' => (float)($bucket['current_value'] ?? 0),
                'real_rate' => !empty($bucket['real_rate']) ? (float)$bucket['real_rate'] : $default_real_rate,
                'access_age' => (float)($bucket['access_age'] ?? 65),
                'full_benefit_age' => (float)($bucket['full_benefit_age'] ?? 67),
                'monthly_contribution' => (float)($bucket['monthly_contribution'] ?? 0),
                'contribution_end_age' => (float)($bucket['contribution_end_age'] ?? 65),
                'early_penalty' => (float)($bucket['early_penalty'] ?? 0),
                'notes' => htmlspecialchars($bucket['notes'] ?? '')
            ];
        }
    }
    
    // Call calculation logic with structured data
    $calculation_results = calculation_logic($retirement_data);
    
    // Display results
    echo "<link rel='stylesheet' href='RTRMNT.css'>";
    echo "<div class='container'>";
    echo "<h1>Retirement Calculation Results</h1>";
    
    echo "<h2>Input Data Summary</h2>";
    echo "<div class='form-section'>";
    echo "<h3>Couple Information</h3>";
    echo "<p><strong>{$retirement_data['couple']['person1']['name']}:</strong> Age {$retirement_data['couple']['person1']['age']}</p>";
    echo "<p><strong>{$retirement_data['couple']['person2']['name']}:</strong> Age {$retirement_data['couple']['person2']['age']}</p>";
    echo "<p><strong>Monthly Expenses:</strong> " . number_format($retirement_data['financial']['monthly_expenses'], 2) . " {$retirement_data['financial']['currency']}</p>";
    echo "<p><strong>Default Real Interest Rate:</strong> {$retirement_data['financial']['default_real_rate']}%</p>";
    echo "<p><strong>Expected Inflation:</strong> {$retirement_data['financial']['inflation_assumption']}%</p>";
    echo "</div>";
    
    echo "<div class='form-section'>";
    echo "<h3>Retirement Accounts</h3>";
    foreach ($retirement_data['buckets'] as $bucket) {
        echo "<div class='bucket-item'>";
        echo "<h4>" . $bucket['name'] . "</h4>";
        echo "<p><strong>Type:</strong> " . ucfirst($bucket['type']) . "</p>";
        echo "<p><strong>Location:</strong> " . $bucket['location'] . "</p>";
        echo "<p><strong>Owner:</strong> " . ucfirst(str_replace('person', 'Person ', $bucket['owner'])) . "</p>";
        echo "<p><strong>Current Value:</strong> $" . number_format($bucket['current_value'], 2) . "</p>";
        echo "<p><strong>Real Interest Rate:</strong> " . $bucket['real_rate'] . "%</p>";
        echo "<p><strong>Access Age:</strong> " . $bucket['access_age'] . "</p>";
        echo "<p><strong>Full Benefit Age:</strong> " . $bucket['full_benefit_age'] . "</p>";
        if ($bucket['monthly_contribution'] > 0) {
            echo "<p><strong>Monthly Contribution:</strong> $" . number_format($bucket['monthly_contribution'], 2) . " until age " . $bucket['contribution_end_age'] . "</p>";
        }
        if ($bucket['early_penalty'] > 0) {
            echo "<p><strong>Early Access Penalty:</strong> " . $bucket['early_penalty'] . "%</p>";
        }
        if (!empty($bucket['notes'])) {
            echo "<p><strong>Notes:</strong> " . $bucket['notes'] . "</p>";
        }
        echo "</div>";
    }
    echo "</div>";
    
    // Display calculation results
    echo "<h2>Retirement Projections</h2>";
    foreach ($calculation_results['bucket_calculations'] as $bucket_calc) {
        $bucket = $bucket_calc['bucket_info'];
        echo "<div class='form-section'>";
        echo "<h3>" . $bucket['name'] . " - Projections</h3>";
        echo "<p><strong>Owner:</strong> " . ucfirst(str_replace('person', 'Person ', $bucket['owner'])) . "</p>";
        echo "<p><strong>Current Value:</strong> $" . number_format($bucket['current_value'], 2) . "</p>";
        echo "<p><strong>Real Interest Rate:</strong> " . $bucket['real_rate'] . "%</p>";
        
        if (!empty($bucket_calc['calculations'])) {
            echo "<table style='width: 100%; border-collapse: collapse; margin-top: 15px;'>";
            echo "<thead>";
            echo "<tr style='background-color: #f0f0f0;'>";
            echo "<th style='border: 1px solid #ddd; padding: 8px; text-align: left;'>Age</th>";
            echo "<th style='border: 1px solid #ddd; padding: 8px; text-align: right;'>Years from Now</th>";
            echo "<th style='border: 1px solid #ddd; padding: 8px; text-align: right;'>Account Value</th>";
            echo "<th style='border: 1px solid #ddd; padding: 8px; text-align: right;'>Monthly Payment</th>";
            echo "<th style='border: 1px solid #ddd; padding: 8px; text-align: right;'>Annual Payment</th>";
            echo "<th style='border: 1px solid #ddd; padding: 8px; text-align: center;'>Penalty</th>";
            echo "</tr>";
            echo "</thead>";
            echo "<tbody>";
            
            foreach ($bucket_calc['calculations'] as $age_label => $calc) {
                $row_style = $calc['penalty_applied'] ? "background-color: #ffe6e6;" : "";
                echo "<tr style='$row_style'>";
                echo "<td style='border: 1px solid #ddd; padding: 8px;'>" . $calc['age'] . "</td>";
                echo "<td style='border: 1px solid #ddd; padding: 8px; text-align: right;'>" . $calc['years_from_now'] . "</td>";
                echo "<td style='border: 1px solid #ddd; padding: 8px; text-align: right;'>$" . number_format($calc['account_value'], 0) . "</td>";
                echo "<td style='border: 1px solid #ddd; padding: 8px; text-align: right;'>$" . number_format($calc['monthly_payment'], 0) . "</td>";
                echo "<td style='border: 1px solid #ddd; padding: 8px; text-align: right;'>$" . number_format($calc['annual_payment'], 0) . "</td>";
                echo "<td style='border: 1px solid #ddd; padding: 8px; text-align: center;'>" . 
                     ($calc['penalty_applied'] ? $calc['penalty_rate'] . "%" : "None") . "</td>";
                echo "</tr>";
            }
            echo "</tbody>";
            echo "</table>";
            
            if ($bucket['early_penalty'] > 0) {
                echo "<p style='margin-top: 10px; font-size: 0.9em; color: #666;'>";
                echo "<em>Note: Rows highlighted in red show reduced payments due to early access penalties.</em>";
                echo "</p>";
            }
        }
        echo "</div>";
    }
    
    // Summary section
    echo "<h2>Summary</h2>";
    echo "<div class='form-section'>";
    echo "<p><strong>Monthly Expenses Target:</strong> $" . number_format($retirement_data['financial']['monthly_expenses'], 0) . "</p>";
    
    $total_monthly_at_access = 0;
    $total_monthly_at_full = 0;
    
    foreach ($calculation_results['bucket_calculations'] as $bucket_calc) {
        if (isset($bucket_calc['calculations']['access_age'])) {
            $total_monthly_at_access += $bucket_calc['calculations']['access_age']['monthly_payment'];
        }
        if (isset($bucket_calc['calculations']['full_benefit_age'])) {
            $total_monthly_at_full += $bucket_calc['calculations']['full_benefit_age']['monthly_payment'];
        }
    }
    
    if ($total_monthly_at_access > 0) {
        echo "<p><strong>Total Monthly Income at Early Access:</strong> $" . number_format($total_monthly_at_access, 0) . "</p>";
        $coverage_early = ($total_monthly_at_access / $retirement_data['financial']['monthly_expenses']) * 100;
        echo "<p><strong>Expense Coverage (Early Access):</strong> " . number_format($coverage_early, 1) . "%</p>";
    }
    
    if ($total_monthly_at_full > 0) {
        echo "<p><strong>Total Monthly Income at Full Benefit:</strong> $" . number_format($total_monthly_at_full, 0) . "</p>";
        $coverage_full = ($total_monthly_at_full / $retirement_data['financial']['monthly_expenses']) * 100;
        echo "<p><strong>Expense Coverage (Full Benefit):</strong> " . number_format($coverage_full, 1) . "%</p>";
    }
    echo "</div>";
    
    echo "<h2>JSON Data Structure</h2>";
    echo "<div class='form-section'>";
    echo "<pre style='background: #f8f8f8; padding: 15px; border-radius: 5px; overflow-x: auto; font-size: 12px;'>";
    echo json_encode($calculation_results, JSON_PRETTY_PRINT);
    echo "</pre>";
    echo "</div>";
    
    echo "<a href='index.php' class='calculate-btn' style='display: inline-block; text-decoration: none; margin-top: 20px;'>Calculate Another Scenario</a>";
    echo "</div>";
    
} else {
    // Redirect to form if accessed directly
    header('Location: index.php');
    exit;
}
?>
";s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";